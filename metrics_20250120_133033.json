{
  "scores": [
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5,
    0.5
  ],
  "model_complexity": [],
  "iterations": [],
  "exploration_paths": [
    "(((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) + bias",
    "(((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) / temp",
    "(((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) * (1 - gamma)",
    "(((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) * alpha",
    "((((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) + bias) * alpha",
    "((((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) + bias) + bias",
    "((((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) + bias) / temp",
    "((((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) + bias) * (1 - gamma)",
    "(((((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) + bias) * alpha) + bias",
    "(((((((((((((Q(t+1) = Q(t) + (R(t) - Q(t))) / temp) / temp) * alpha) / temp) * alpha) / temp) * alpha) + bias) / temp) * alpha) + bias) * alpha) / temp"
  ]
}